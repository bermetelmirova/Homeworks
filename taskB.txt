1. Как вы понимаете Error? RuntimeException? CheckedException?
Error - это ошибка которую мы не можем отловить т.к. чаще всего он возникает в JVM, 
это тип ошибки, которую программист не может контролировать.

RuntimeException - это ошибки, которые возникают во время выполнения программы, его не обязательно обрабатывать.

CheckedException - мы ожидаем эти ошибки и обязательно должны обрабатывать их, если это не сделать,
то программа  даже не закомпилится.

2. Для чего применяется throw?
Когда мы хотим поднять тревогу, он выбрасывает ошибку

3. Разница между Unchecked Exceptions & Checked Exceptions? (Прям совсем своими словами!)
Unchecked Exceptions - они возникают в неожиданных местах, их можно не обрабатывать. Программа запустится,
но не зароботает. Как я поняла, это просто ошибки, которые мы должны сами предусмотреть например отрицательный возраст,
деление на 0 и т.д. Или же они не должны допускаться в идеале. 

Checked Exceptions - это ожидаемые ошибки, мы их ожидаем и обрабатываем ее, иначе программа даже не запустится.

4. Как вы понимаете блоки try {} catch {} finally {}?
try {} - помещаем потенциально пролемный код
catch {} - зарабатывает если в try возникает ошибка
finally {} - работает в любом случае
5. Почему при множественном catch, сначала используем более детальные Exceptions, и только потом переходим к родителям?
Потому что ООП, если мы первым поставим Exceptions то смысла ставить наследников нет, ведь родитель отловит эту ошибку 
до наследника в любом случае 